{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","path","id","dialog","active","to","Message","message","maxLength100","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","sendMessage","isAuth","state","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/5.8efd7d82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3Iqea\",\"error\":\"FormControls_error__1jFvc\",\"formSummaryError\":\"FormControls_formSummaryError__1oJsp\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Uwjjx\",\"dialogsItems\":\"Dialogs_dialogsItems__BO4ZK\",\"dialog\":\"Dialogs_dialog__1UKVw\",\"active\":\"Dialogs_active__1C7Ud\",\"messages\":\"Dialogs_messages__2rYdB\",\"message\":\"Dialogs_message__3flvp\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.dialog + \"\" + classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={classes.dialog}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n\r\nlet maxLength100 = maxLengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength100]}\r\n          placeholder={\"Enter your message\"}\r\n          name={\"newMessageBody\"}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default reduxForm({ form: \"dialog-add-message-form\" })(AddMessageForm);\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = ({ dialogsPage, sendMessage, isAuth }) => {\r\n  let state = dialogsPage;\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!isAuth) {\r\n    return <Redirect to={\"/login\"} />;\r\n  } else {\r\n    return (\r\n      <div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>{dialogsElements}</div>\r\n        <div className={classes.messages}>\r\n          <div>{messagesElements}</div>\r\n        </div>\r\n\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: () => {\r\n      dispatch(sendMessageCreator());\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}
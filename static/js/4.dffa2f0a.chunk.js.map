{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Like/Like.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","style","formSummaryError","type","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","userInfo","src","photos","large","userPhoto","avatar","target","files","initialValues","formData","console","log","then","Like","message","Post","item","alt","maxLength10","MyPosts","React","memo","posts","addPost","postsElements","p","likesCount","id","postsBlock","AddNewPostFormRedux","values","newPostText","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUsersStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,mMCGnHC,EAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAChDC,EAAWH,GAAWC,EAC5B,OACE,sBACEG,UAAWC,IAAQC,YAAc,KAAOH,EAAWE,IAAQJ,MAAQ,IADrE,UAGE,8BAAMC,IACLC,GAAY,+BAAOF,QAIbM,EAAW,SAACC,GAAW,IAC1BV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADY,YACYF,EADZ,2BAEjC,OACE,cAACX,EAAD,2BAAiBW,GAAjB,aACE,oDAAcV,GAAWW,QAKlBE,EAAQ,SAACH,GAAW,IACvBV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADS,YACeF,EADf,2BAE9B,OACE,cAACX,EAAD,2BAAiBW,GAAjB,aACE,iDAAWV,GAAWW,QAIfG,EAAc,SACzBC,EACAC,EACAC,EACAC,GAJyB,IAKzBR,EALyB,uDAKjB,GACRS,EANyB,uDAMlB,GANkB,OAQzB,gCACE,cAAC,IAAD,aACEJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPR,IAELS,O,iCChDL,oEAAO,IAAME,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,GAASA,EAAMG,OAASD,EAC1B,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNJ3B,EAAOC,QAAU,CAAC,SAAW,8BAA8B,OAAS,4BAA4B,QAAU,+B,oBCA1GD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,4IC2CV4B,EA1CgB,SAAChB,GAAW,IAAD,EACViB,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAASjB,EAAMoB,QAFD,mBAEnCA,EAFmC,KAE3BC,EAF2B,KAGxCC,qBAAU,WACRD,EAAUrB,EAAMoB,UACf,CAACpB,EAAMoB,SAYV,OACE,iCACIF,GACA,gCACE,uCACA,sBAAMK,cAfW,WACvBJ,GAAY,IAcN,SACGnB,EAAMoB,QAAU,kBAKtBF,GACC,8BACE,uBACEM,SAjBa,SAACC,GACtBJ,EAAUI,EAAEC,cAAcd,QAiBlBe,WAAW,EACXC,OAvBiB,WACzBT,GAAY,GACZnB,EAAM6B,aAAaT,IAsBXR,MAAOQ,U,4CCsBJU,EAJkBC,YAAU,CAAEC,KAAM,gBAAlBD,EA5CT,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASzC,EAAY,EAAZA,MAChD,OACE,uBAAM0C,SAAUF,EAAhB,UACE,8BACE,4CAEDxC,GAAS,qBAAKG,UAAWwC,IAAMC,iBAAtB,SAAyC5C,IACnD,gCACE,0CADF,KACqBW,YAAY,YAAa,WAAY,GAAID,QAE9D,gCACE,kDADF,IAEGC,YAAY,GAAI,iBAAkB,GAAID,IAAO,CAAEmC,KAAM,gBAGxD,gCACE,uDADF,IAEGlC,YACC,yBACA,4BACA,GACAL,QAIJ,gCACE,yCADF,IACmBK,YAAY,WAAY,UAAW,GAAIL,QAE1D,gCACE,yCADF,IAEGwC,OAAOC,KAAKN,EAAQO,UAAUC,KAAI,SAACC,GAClC,OACE,qBAAe/C,UAAWgD,IAAEC,QAA5B,SACE,8BACGF,EADH,KACUvC,YAAYuC,EAAK,YAAcA,EAAK,GAAIxC,SAF1CwC,eCoBhBG,EAAc,SAAC,GAAwC,IAAtCZ,EAAqC,EAArCA,QAASa,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACvC,OACE,gCACGD,GACC,8BACE,wBAAQE,QAASD,EAAjB,oBAGJ,gCACE,2CACCd,EAAQgB,YAEX,gCACE,mDACChB,EAAQiB,eAAiB,MAAQ,QAEnCjB,EAAQiB,gBACP,gCACE,wDACCjB,EAAQkB,6BAGb,gCACE,0CACClB,EAAQmB,WAEX,gCACE,0CACCd,OAAOC,KAAKN,EAAQO,UAAUC,KAAI,SAACC,GAClC,OACE,cAAC,EAAD,CAEEW,aAAcX,EACdY,aAAcrB,EAAQO,SAASE,IAF1BA,aAWba,EAAU,SAAC,GAAoC,IAAlCF,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC/B,OACE,sBAAK3D,UAAWC,IAAQgD,QAAxB,UACE,4BAAIS,IADN,KAC0BC,MAIfE,EAxGK,SAAC,GAOd,IANLvB,EAMI,EANJA,QACAd,EAKI,EALJA,OACAS,EAII,EAJJA,aACAkB,EAGI,EAHJA,QACAW,EAEI,EAFJA,UACAC,EACI,EADJA,YACI,EAC0B1C,oBAAS,GADnC,mBACCC,EADD,KACWC,EADX,KAGJ,IAAKe,EACH,OAAO,cAAC0B,EAAA,EAAD,IAcT,OACE,gCACE,sBAAKhE,UAAWC,IAAQgE,SAAxB,UACE,qBACEC,IAAK5B,EAAQ6B,OAAOC,OAASC,IAC7BrE,UAAWC,IAAQqE,SAEpBnB,GAAW,uBAAOT,KAAM,OAAQd,SAnBX,SAACC,GACvBA,EAAE0C,OAAOC,MAAMrD,QACjB2C,EAAUjC,EAAE0C,OAAOC,MAAM,UAmBxBlD,EACC,cAAC,EAAD,CACEmD,cAAenC,EACfA,QAASA,EACTC,SApBS,SAACmC,GAChBC,QAAQC,IAAIF,GACZX,EAAYW,GAAUG,MAAK,WACzBtD,GAAY,SAoBV,cAAC,EAAD,CACEe,QAASA,EACTa,QAASA,EACTC,aAAc,WACZ7B,GAAY,MAKlB,cAAC,EAAD,CAAwBC,OAAQA,EAAQS,aAAcA,Q,0BCrD7C6C,EAHF,SAAC1E,GACZ,OAAO,8BAAMA,EAAM2E,W,kBCaNC,EAZF,SAAC,GAAiB,IAAfD,EAAc,EAAdA,QACd,OACE,sBAAK/E,UAAWC,IAAQgF,KAAxB,UACE,qBACEf,IAAI,sGACJgB,IAAK,SAENH,EACD,cAAC,EAAD,Q,kBCDAI,EAAclE,YAAiB,IAC/BmE,EAAUC,IAAMC,MAAK,YAAyB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC/BC,EAAgBF,EAAMzC,KAAI,SAAC4C,GAAD,OAC5B,cAAC,EAAD,CAAMX,QAASW,EAAEX,QAASY,WAAYD,EAAEC,YAAiBD,EAAEE,OAQ7D,OACE,sBAAK5F,UAAWC,IAAQ4F,WAAxB,UACE,0CACA,8BACE,cAACC,EAAD,CAAqBvD,SARX,SAACwD,GACfP,EAAQO,EAAOC,kBASb,8BACE,qBAAKhG,UAAWC,IAAQsF,MAAxB,SAAgCE,YAqBlCK,EAAsB3D,YAAU,CAAEC,KAAM,yBAAlBD,EAhBL,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACxB,OACE,uBAAME,SAAUF,EAAhB,UACE,cAAC4D,EAAA,EAAD,CACErF,UAAWT,IACXO,KAAM,cACND,YAAa,kBACbK,SAAU,CAACC,IAAUoE,KAGvB,8BACE,sDAQOC,I,QChCAc,EADUC,aAfD,SAACC,GACvB,MAAO,CACLb,MAAOa,EAAMC,YAAYd,MACzBS,YAAaI,EAAMC,YAAYL,gBAIR,SAACM,GAC1B,MAAO,CACLd,QAAS,SAACQ,GACRM,EAASC,YAAqBP,QAKXG,CAA6Cf,GCCvDoB,EAhBC,SAACpG,GACf,OACE,gCACE,cAAC,EAAD,CACE+C,QAAS/C,EAAM+C,QACfW,UAAW1D,EAAM0D,UACjBxB,QAASlC,EAAMkC,QACfd,OAAQpB,EAAMoB,OACduC,YAAa3D,EAAM2D,YACnB9B,aAAc7B,EAAM6B,eAGtB,cAAC,EAAD,Q,eCFAwE,E,oKACJ,WACE,IAAIC,EAASC,KAAKvG,MAAMwG,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAKvG,MAAM0G,mBAElBH,KAAKvG,MAAM2G,QAAQC,KAAK,UAG5BL,KAAKvG,MAAM6G,eAAeP,GAC1BC,KAAKvG,MAAM8G,eAAeR,K,+BAE5B,WACEC,KAAKQ,mB,gCAGP,SAAmBC,EAAWC,EAAWC,GACnCX,KAAKvG,MAAMwG,MAAMC,OAAOH,SAAWU,EAAUR,MAAMC,OAAOH,QAC5DC,KAAKQ,mB,oBAGT,WACE,OACE,cAAC,EAAD,2BACMR,KAAKvG,OADX,IAEE+C,SAAUwD,KAAKvG,MAAMwG,MAAMC,OAAOH,OAClCpE,QAASqE,KAAKvG,MAAMkC,QACpBd,OAAQmF,KAAKvG,MAAMoB,OACnBS,aAAc0E,KAAKvG,MAAM6B,aACzB6B,UAAW6C,KAAKvG,MAAM0D,iB,GA7BCuB,IAAMkC,WA0CtBC,sBACbrB,aARoB,SAACC,GAAD,MAAY,CAChC9D,QAAS8D,EAAMC,YAAY/D,QAC3Bd,OAAQ4E,EAAMC,YAAY7E,OAC1BsF,iBAAkBV,EAAMqB,KAAKf,OAC7BgB,OAAQtB,EAAMqB,KAAKC,UAIM,CACvBT,mBACAC,mBACAjF,iBACA6B,cACAC,kBAGF4D,IATaH,CAUbf","file":"static/js/4.dffa2f0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3Iqea\",\"error\":\"FormControls_error__1jFvc\",\"formSummaryError\":\"FormControls_formSummaryError__1oJsp\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"ProfileInfo_userInfo__3YHXX\",\"avatar\":\"ProfileInfo_avatar__GX63U\",\"contact\":\"ProfileInfo_contact__1c-PN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2DYr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2BQ9v\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status</b>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"**********\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n\r\n      <div>\r\n        <b>My professional skills</b>:\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>\r\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.userInfo}>\r\n        <img\r\n          src={profile.photos.large || userPhoto}\r\n          className={classes.avatar}\r\n        />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n      </div>\r\n      {editMode ? (\r\n        <ProfileDataForm\r\n          initialValues={profile}\r\n          profile={profile}\r\n          onSubmit={onSubmit}\r\n        />\r\n      ) : (\r\n        <ProfileData\r\n          profile={profile}\r\n          isOwner={isOwner}\r\n          goToEditMode={() => {\r\n            setEditMode(true);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name:</b>\r\n        {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b>\r\n        {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills:</b>\r\n          {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me:</b>\r\n        {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nconst Like = (props) => {\r\n  return <div>{props.message}</div>;\r\n};\r\nexport default Like;\r\n","import React from \"react\";\r\nimport Like from \"./Like/Like\";\r\nimport classes from \"./Post.module.css\";\r\nconst Post = ({ message }) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNpLVeceq95v3XOJarckAU1aHea__LOj3FTw&usqp=CAU\"\r\n        alt={\"like\"}\r\n      ></img>\r\n      {message}\r\n      <Like />\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPosts = React.memo(({ posts, addPost }) => {\r\n  let postsElements = posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} key={p.id} />\r\n  ));\r\n\r\n  let newPostText = React.createRef();\r\n  let onAddPost = (values) => {\r\n    addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <div>\r\n        <div className={classes.posts}>{postsElements}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nconst AddNewPostForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name={\"newPostText\"}\r\n        placeholder={\"Enter your post\"}\r\n        validate={[required, maxLength10]}\r\n      />\r\n\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  getUsersStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\n\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUsersStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUsersStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
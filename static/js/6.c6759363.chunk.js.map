{"version":3,"sources":["components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,mMCGnHC,EAAc,SAAC,GAAkD,EAAhDC,MAAiD,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAChDC,EAAWH,GAAWC,EAC5B,OACE,sBACEG,UAAWC,IAAQC,YAAc,KAAOH,EAAWE,IAAQJ,MAAQ,IADrE,UAGE,8BAAMC,IACLC,GAAY,+BAAOF,QAIbM,EAAW,SAACC,GAAW,IAC1BV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADY,YACYF,EADZ,2BAEjC,OACE,cAACX,EAAD,2BAAiBW,GAAjB,aACE,oDAAcV,GAAWW,QAKlBE,EAAQ,SAACH,GAAW,IACvBV,EAAqCU,EAArCV,MAAuBW,GAAcD,EAA9BT,KAA8BS,EAAxBE,MADS,YACeF,EADf,2BAE9B,OACE,cAACX,EAAD,2BAAiBW,GAAjB,aACE,iDAAWV,GAAWW,QAIfG,EAAc,SACzBC,EACAC,EACAC,EACAC,GAJyB,IAKzBR,EALyB,uDAKjB,GACRS,EANyB,uDAMlB,GANkB,OAQzB,gCACE,cAAC,IAAD,aACEJ,YAAaA,EACbC,KAAMA,EACNI,SAAUH,EACVC,UAAWA,GACPR,IAELS,O,iCChDL,oEAAO,IAAME,EAAW,SAACC,GACvB,IAAIA,EACJ,MAAO,qBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,GAAIA,GAASA,EAAMG,OAASD,EAC1B,MAAM,iBAAN,OAAwBA,EAAxB,e,iCCPJ,2FAkDME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EA3BL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAc1B,EAAY,EAAZA,MACjC,OACE,uBAAM2B,SAAUD,EAAhB,UACGf,YAAY,QAAS,QAAS,CAACO,KAAWR,KAC1CC,YAAY,WAAY,WAAY,CAACO,KAAWR,IAAO,CACtDkB,KAAM,aAEPjB,YACC,KACA,aACA,GACAD,IACA,CAAEkB,KAAM,YACR,eAGD5B,GAAS,qBAAKG,UAAWC,IAAQyB,iBAAxB,SAA2C7B,IACrD,8BACE,mDAUO8B,uBALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,UAImB,CAAEE,WAA3BJ,EA1CD,SAAC,GAAuB,IAArBI,EAAoB,EAApBA,MAIf,OAJmC,EAAbF,OAKb,cAAC,IAAD,CAAUG,GAAI,aAGrB,gCACE,uCACA,cAACZ,EAAD,CAAgBI,SATH,SAACS,GAChBF,EAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.c6759363.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3Iqea\",\"error\":\"FormControls_error__1jFvc\",\"formSummaryError\":\"FormControls_formSummaryError__1oJsp\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./FormControls.module.css\";\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength)\r\n    return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport classes from \"./../common/FormsControls/FormControls.module.css\";\r\n\r\nconst Login = ({ login, isAuth }) => {\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n  if (isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField(\"Email\", \"email\", [required], Input)}\r\n      {createField(\"Password\", \"password\", [required], Input, {\r\n        type: \"password\",\r\n      })}\r\n      {createField(\r\n        null,\r\n        \"rememberMe\",\r\n        [],\r\n        Input,\r\n        { type: \"checkbox\" },\r\n        \"Remember me\"\r\n      )}\r\n\r\n      {error && <div className={classes.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}